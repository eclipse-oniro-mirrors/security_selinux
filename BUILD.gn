# Copyright (c) 2021 北京万里红科技有限公司
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

SELINUX_ROOT_DIR = "//base/security/selinux"

THIRD_PARTY_SELINUX_DIR = "//third_party/selinux"
THIRD_PARTY_PCRE2_DIR = "//third_party/pcre2"
LIBSELINUX_ROOT_DIR = "$THIRD_PARTY_SELINUX_DIR/libselinux"
LIBSEPOL_ROOT_DIR = "$THIRD_PARTY_SELINUX_DIR/libsepol"

ohos_shared_library("libload_policy") {
  output_name = "libload_policy"
  sources = [
    "$SELINUX_ROOT_DIR/interfaces/policycoreutils/src/load_policy.c",
    "$SELINUX_ROOT_DIR/interfaces/tools/load_policy/load_policy.c",
  ]
  include_dirs = [
    "$LIBSELINUX_ROOT_DIR/include",
    "$LIBSELINUX_ROOT_DIR/include",
    "$LIBSELINUX_ROOT_DIR/src",
    "$LIBSEPOL_ROOT_DIR/cil/src",
    "$LIBSEPOL_ROOT_DIR/src",
    "$LIBSEPOL_ROOT_DIR/cil/include",
    "$LIBSEPOL_ROOT_DIR/include",
    "$SELINUX_ROOT_DIR/interfaces/policycoreutils/include",
  ]
  deps = [
    "$THIRD_PARTY_PCRE2_DIR:libpcre2",
    "$THIRD_PARTY_SELINUX_DIR:libselinux",
    "$THIRD_PARTY_SELINUX_DIR:libsepol",
  ]
  cflags = [
    "-D_GNU_SOURCE",
    "-DUSE_PCRE2",
    "-w",
  ]
  install_enable = true
  install_images = [
    "system",
    "ramdisk",
    "updater",
  ]
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"
  subsystem_name = "security"
}

ohos_shared_library("librestorecon") {
  output_name = "librestorecon"
  sources = [ "$SELINUX_ROOT_DIR/interfaces/policycoreutils/src/restorecon.c" ]
  include_dirs = [
    "$LIBSELINUX_ROOT_DIR/include",
    "$LIBSELINUX_ROOT_DIR/include",
    "$LIBSELINUX_ROOT_DIR/src",
    "$LIBSEPOL_ROOT_DIR/cil/src",
    "$LIBSEPOL_ROOT_DIR/src",
    "$LIBSEPOL_ROOT_DIR/cil/include",
    "$LIBSEPOL_ROOT_DIR/include",
    "$THIRD_PARTY_PCRE2_DIR/include_internal",
    "$THIRD_PARTY_PCRE2_DIR/include",
    "$SELINUX_ROOT_DIR/interfaces/policycoreutils/include",
    "//third_party/bounds_checking_function/include",
  ]
  deps = [
    "$THIRD_PARTY_PCRE2_DIR:libpcre2",
    "$THIRD_PARTY_SELINUX_DIR:libselinux",
    "$THIRD_PARTY_SELINUX_DIR:libsepol",
    "//third_party/bounds_checking_function:libsec_static",
  ]
  cflags = [
    "-D_GNU_SOURCE",
    "-DUSE_PCRE2",
    "-w",
  ]
  install_enable = true
  install_images = [
    "system",
    "ramdisk",
    "updater",
  ]
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"
  subsystem_name = "security"
}

ohos_executable("load_policy") {
  install_enable = true
  sources = [ "$SELINUX_ROOT_DIR/interfaces/tools/load_policy/load_policy.c" ]
  include_dirs = [ "$SELINUX_ROOT_DIR/interfaces/policycoreutils/include" ]
  deps = [
    ":libload_policy",
    "$THIRD_PARTY_PCRE2_DIR:libpcre2",
    "$THIRD_PARTY_SELINUX_DIR:libselinux",
    "$THIRD_PARTY_SELINUX_DIR:libsepol",
  ]
  cflags = [
    "-D_GNU_SOURCE",
    "-DUSE_PCRE2",
    "-w",
  ]
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"
  subsystem_name = "security"
}

ohos_executable("restorecon") {
  install_enable = true
  sources = [ "$SELINUX_ROOT_DIR/interfaces/tools/restorecon/restorecon.c" ]
  include_dirs = [
    "$SELINUX_ROOT_DIR/interfaces/policycoreutils/include",
    "//third_party/bounds_checking_function/include",
  ]
  deps = [
    ":librestorecon",
    "$THIRD_PARTY_PCRE2_DIR:libpcre2",
    "$THIRD_PARTY_SELINUX_DIR:libselinux",
    "$THIRD_PARTY_SELINUX_DIR:libsepol",
    "//third_party/bounds_checking_function:libsec_static",
  ]
  cflags = [
    "-D_GNU_SOURCE",
    "-DUSE_PCRE2",
    "-w",
  ]
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"
  subsystem_name = "security"
}

ohos_executable("selinux_test") {
  install_enable = true
  sources = [ "$SELINUX_ROOT_DIR/test/selinux_test.c" ]
  include_dirs = [
    "$LIBSELINUX_ROOT_DIR/include",
    "//third_party/bounds_checking_function/include",
  ]
  deps = [
    "$THIRD_PARTY_PCRE2_DIR:libpcre2",
    "$THIRD_PARTY_SELINUX_DIR:libselinux",
    "//third_party/bounds_checking_function:libsec_static",
  ]
  cflags = [
    "-D_GNU_SOURCE",
    "-DUSE_PCRE2",
    "-w",
  ]
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"
  subsystem_name = "security"
}

action("build_policy") {
  script = "$SELINUX_ROOT_DIR/scripts/build_policy.py"
  args = [
    "--dst-file",
    rebase_path(target_out_dir + "/policy.31"),
    "--tool-path",
    rebase_path(root_build_dir + "/clang_x64/security/selinux/"),
  ]
  deps = [
    "$THIRD_PARTY_SELINUX_DIR:checkpolicy($host_toolchain)",
    "$THIRD_PARTY_SELINUX_DIR:secilc($host_toolchain)",
  ]
  outputs = [ target_out_dir + "/policy.31" ]
}

action("build_file_contexts_bin") {
  script = "$SELINUX_ROOT_DIR/scripts/build_contexts.py"
  args = [
    "--dst-file",
    rebase_path(target_out_dir + "/file_contexts.bin"),
    "--tool-path",
    rebase_path(root_build_dir + "/clang_x64/security/selinux/"),
  ]
  deps = [ "$THIRD_PARTY_SELINUX_DIR:sefcontext_compile($host_toolchain)" ]
  outputs = [ target_out_dir + "/file_contexts.bin" ]
  outputs += [ target_out_dir + "/file_contexts" ]
}

action("enforce_selinux") {
  script = "scripts/enforce_selinux.sh"
  outputs = [ "$target_out_dir/" ]
}

ohos_prebuilt_etc("build_sepolicy") {
  deps = [ ":build_policy" ]
  source = target_out_dir + "/policy.31"
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"
  relative_install_dir = "selinux/targeted/policy/"
}

ohos_prebuilt_etc("build_file_contexts") {
  deps = [ ":build_file_contexts_bin" ]
  source = target_out_dir + "/file_contexts.bin"
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"
  relative_install_dir = "selinux/targeted/contexts/"
}

ohos_prebuilt_etc("config") {
  source = "$SELINUX_ROOT_DIR/config/config"
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"
  if (enforce_selinux) {
    deps = [ ":enforce_selinux" ]
  }
  relative_install_dir = "selinux/"
}

ohos_prebuilt_etc("file_contexts") {
  deps = [ ":build_file_contexts_bin" ]
  source = target_out_dir + "/file_contexts"
  license_file = "$SELINUX_ROOT_DIR/LICENSE"
  part_name = "selinux"

  # FIXME 此处不应该改变 file_contexts 的约定路径！
  # 因为 OpenHarmony 的 e2fsdroid 无法支持五级系统目录，所以在此作出规避，
  # 但是很显然这是不应当的。
  #relative_install_dir = "selinux/targeted/contexts/files/"
  relative_install_dir = "selinux/targeted/contexts/"
}

group("selinux_group") {
  if (build_selinux) {
    deps = [
      "//base/security/selinux:build_file_contexts",
      "//base/security/selinux:build_sepolicy",
      "//base/security/selinux:config",
      "//base/security/selinux:file_contexts",
      "//base/security/selinux:load_policy",
      "//base/security/selinux:restorecon",
      "//base/security/selinux:selinux_test",
      "//third_party/selinux:checkpolicy($host_toolchain)",
      "//third_party/selinux:chkcon",
      "//third_party/selinux:getenforce",
      "//third_party/selinux:getfilecon",
      "//third_party/selinux:getpidcon",
      "//third_party/selinux:secilc($host_toolchain)",
      "//third_party/selinux:sefcontext_compile($host_toolchain)",
      "//third_party/selinux:selinux_check_access",
      "//third_party/selinux:selinuxexeccon",
      "//third_party/selinux:setenforce",
      "//third_party/selinux:setfilecon",
    ]
  }
}
