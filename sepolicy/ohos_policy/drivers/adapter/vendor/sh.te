# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#avc:  denied  { call } for  pid=1967 comm="HdiServiceManag" scontext=u:r:sh:s0 tcontext=u:r:hdf_devmgr:s0 tclass=binder permissive=1
#avc:  denied  { transfer } for  pid=2007 comm="HdiServiceManag" scontext=u:r:sh:s0 tcontext=u:r:hdf_devmgr:s0 tclass=binder permissive=1
#avc:  denied  { open } for  pid=2103 comm="sh" path="/sys/devices/virtual/hdf/khdf_ut/uevent" dev="sysfs" ino=32554 scontext=u:r:sh:s0 tcontext=u:object_r:sys_file:s0 tclass=file permissive=1
#avc:  denied  { write } for  pid=2103 comm="sh" name="uevent" dev="sysfs" ino=32554 scontext=u:r:sh:s0 tcontext=u:object_r:sys_file:s0 tclass=file permissive=1
#avc:  denied  { get } for service=sample_driver_service2 pid=1998 scontext=u:r:sh:s0 tcontext=u:object_r:default_hdf_service:s0 tclass=hdf_devmgr_class permissive=1
#avc:  denied  { get } for service=hdf_device_manager pid=1998 scontext=u:r:sh:s0 tcontext=u:object_r:hdf_device_manager:s0 tclass=hdf_devmgr_class permissive=1
#avc:  denied  { get } for service=sample_driver_service pid=1998 scontext=u:r:sh:s0 tcontext=u:object_r:hdf_sample_driver_service:s0 tclass=hdf_devmgr_class permissive=1
debug_only(`
    allow sh hdf_devmgr:binder { call transfer };
    allow sh sys_file:file { open write };
    allow sh hdf_sample_service:hdf_devmgr_class { get };
    allow sh hdf_device_manager:hdf_devmgr_class { get };
    allow sh hdf_sample_driver_service:hdf_devmgr_class { get };
    allow sh hdf_sample1_driver_service:hdf_devmgr_class { get };
    allow sh proc_boot_id:file { read open };
    allow sh hdf_audio_manager_service:binder { call };
    allow sh hdf_effect_model_service:binder { call };
    allow sh dev_ashmem_file:chr_file { open read write};
    allow sh dev_dri_file:chr_file { read write open ioctl getattr};
    allow sh dev_dri_file:dir { search };
    allowxperm sh dev_dri_file:chr_file ioctl 0x641f;
    allow sh chip_prod_file:dir { read open getattr };
    allow sh chip_prod_file:file { getattr };
    allow sh input_user_host:dir { getattr search };
    allow sh input_user_host:file { open read };
')
