# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#avc:  denied  { get } for service=hdf_device_manager pid=344 scontext=u:r:light_host:s0 tcontext=u:object_r:hdf_device_manager:s0 tclass=hdf_devmgr_class
#avc:  denied  { add } for service=light_interface_service pid=344 scontext=u:r:light_host:s0 tcontext=u:object_r:hdf_light_interface_service:s0 tclass=hdf_devmgr_class
allow light_host hdf_device_manager:hdf_devmgr_class { get };
allow light_host hdf_light_interface_service:hdf_devmgr_class { add };

#avc:  denied  { get } for service=hdf_device_manager pid=346 scontext=u:r:sensor_host:s0 tcontext=u:object_r:hdf_device_manager:s0 tclass=hdf_devmgr_class
#avc:  denied  { add } for service=sensor_interface_service pid=346 scontext=u:r:sensor_host:s0 tcontext=u:object_r:hdf_sensor_interface_service:s0 tclass=hdf_devmgr_class
allow sensor_host hdf_device_manager:hdf_devmgr_class { get };
allow sensor_host hdf_sensor_interface_service:hdf_devmgr_class { add };

#avc:  denied  { get } for service=hdf_device_manager pid=359 scontext=u:r:power_host:s0 tcontext=u:object_r:hdf_device_manager:s0 tclass=hdf_devmgr_class
#avc:  denied  { add } for service=thermal_interface_service pid=359 scontext=u:r:power_host:s0 tcontext=u:object_r:hdf_thermal_interface_service:s0 tclass=hdf_devmgr_class
#avc:  denied  { add } for service=battery_interface_service pid=359 scontext=u:r:power_host:s0 tcontext=u:object_r:hdf_battery_interface_service:s0 tclass=hdf_devmgr_class
#avc:  denied  { add } for service=power_interface_service pid=359 scontext=u:r:power_host:s0 tcontext=u:object_r:hdf_power_interface_service:s0 tclass=hdf_devmgr_class
#avc:  denied  { get } for service=5100 pid=555 scontext=u:r:power_host:s0 tcontext=u:object_r:sa_device_service_manager:s0 tclass=samgr_class permissive=1
allow power_host hdf_device_manager:hdf_devmgr_class { get };
allow power_host hdf_thermal_interface_service:hdf_devmgr_class { add };
allow power_host hdf_battery_interface_service:hdf_devmgr_class { add };
allow power_host hdf_power_interface_service:hdf_devmgr_class { add };
allow power_host sa_device_service_manager:samgr_class { get };

#avc:  denied  { get } for service=hdf_device_manager pid=345 scontext=u:r:vibrator_host:s0 tcontext=u:object_r:hdf_device_manager:s0 tclass=hdf_devmgr_class permissive=1
#avc:  denied  { add } for service=vibrator_interface_service pid=345 scontext=u:r:vibrator_host:s0 tcontext=u:object_r:hdf_vibrator_interface_service:s0 tclass=hdf_devmgr_class permissive=1
allow vibrator_host hdf_device_manager:hdf_devmgr_class { get };
allow vibrator_host hdf_vibrator_interface_service:hdf_devmgr_class { add };

#avc:  denied  { get } for service=hdf_device_manager pid=346 scontext=u:r:motion_host:s0 tcontext=u:object_r:hdf_device_manager:s0 tclass=hdf_devmgr_class
#avc:  denied  { add } for service=motion_interface_service pid=346 scontext=u:r:motion_host:s0 tcontext=u:object_r:hdf_motion_interface_service:s0 tclass=hdf_devmgr_class
allow motion_host hdf_device_manager:hdf_devmgr_class { get };
allow motion_host hdf_motion_interface_service:hdf_devmgr_class { add };

allow sh hdf_sensor_interface_service:hdf_devmgr_class { get };
allow sh sa_device_service_manager:samgr_class { get };

allow rootfs labeledfs:filesystem { associate };

#avc: denied { get } for service=hdf_device_manager pid=379 scontext=u:r:partitionslot_host:s0 tcontext=u:object_r:hdf_device_manager:s0 tclass=hdf_devmgr_class permissive=1
#avc: denied { add } for service=partition_slot_service pid=379 scontext=u:r:partitionslot_host:s0 tcontext=u:object_r:hdf_partition_slot_service:s0 tclass=hdf_devmgr_class permissive=1
allow partitionslot_host hdf_device_manager:hdf_devmgr_class { get };
allow partitionslot_host hdf_partition_slot_service:hdf_devmgr_class { add };
allow partitionslot_host sa_device_service_manager:samgr_class { get };
