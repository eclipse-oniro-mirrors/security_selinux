# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#avc:  denied  { open } for  pid=478 comm="power_host" path="/data/log/thermal/thermal-log/" dev="sysfs" ino=4991 scontext=u:r:power_host:s0 tcontext=u:object_r:sysfs_state:s0 tclass=file permissive=1
allow power_host data_log:file { getattr open read write unlink };

#avc: denied { remove_name } for pid=436 comm="power_host" name="thermal.007.20220724-172607" dev="mmcblk0p11" ino=1436218 scontext=u:r:power_host:s0 tcontext=u:object_r:data_log:s0 tclass=dir permissive=1
allow power_host data_log:dir { open read remove_name search write open read remove_name write search };

#avc:  denied  { get } for service=3901 pid=1400 scontext=u:r:power_host:s0 tcontext=u:object_r:sa_param_watcher:s0 tclass=samgr_class permissive=1
allow power_host sa_param_watcher:samgr_class { get };

#avc:  denied  { call transfer } for  pid=464 comm="power_host" scontext=u:r:power_host:s0 tcontext=u:r:param_watcher:s0 tclass=binder permissive=1
allow power_host param_watcher:binder { call transfer };

#avc:  denied  { read } for  pid=421 comm="hdf_devhost" name="u:object_r:accessibility_param:s0" dev="tmpfs" ino=53 scontext=u:r:power_host:s0 tcontext=u:object_r:accessibility_param:s0 tclass=file permissive=1
allow power_host accessibility_param:file { read };

#avc:  denied  { getattr } for  pid=563 comm="IPC_0_636" path="/data/service/el0/thermal/sensor/soc/temp" dev="mmcblk0p12" ino=209 scontext=u:r:power_host:s0 tcontext=u:object_r:data_service_el0_file:s0 tclass=file permissive=0
allow power_host data_service_el0_file:file { getattr };

#avc:  denied  { getattr } for  pid=563 comm="IPC_0_636" path="/sys/devices/virtual/thermal/thermal_zone0/temp" dev="sysfs" ino=5327 scontext=u:r:power_host:s0 tcontext=u:object_r:sys_file:s0 tclass=file permissive=0
allow power_host sys_file:file { getattr };

#avc:  denied  { read } for  pid=478 comm="IPC_1_543" name="u:object_r:thermal_log_param:s0" dev="tmpfs" ino=80 scontext=u:r:power_host:s0 tcontext=u:object_r:thermal_log_param:s0 tclass=file permissive=0
#avc:  denied  { open } for  pid=491 comm="IPC_1_542" path="/dev/__parameters__/u:object_r:thermal_log_param:s0" dev="tmpfs" ino=80 scontext=u:r:power_host:s0 tcontext=u:object_r:thermal_log_param:s0 tclass=file permissive=0
#avc:  denied  { map } for  pid=485 comm="IPC_1_594" path="/dev/__parameters__/u:object_r:thermal_log_param:s0" dev="tmpfs" ino=80 scontext=u:r:power_host:s0 tcontext=u:object_r:thermal_log_param:s0 tclass=file permissive=0
allow power_host thermal_log_param:file { open read map };

#avc:  denied  { add } for service=thermal_interface_service pid=359 scontext=u:r:power_host:s0 tcontext=u:object_r:hdf_thermal_interface_service:s0 tclass=hdf_devmgr_class
allow power_host hdf_thermal_interface_service:hdf_devmgr_class { add };
