# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type distributeddata, sadomain, domain;

allow distributeddata accesstoken_service:binder { call };
allow distributeddata accountmgr:binder { call };
allow distributeddata audio_policy:binder { call transfer };
#allow distributeddata data_app_el2_file:dir { search };
#allow distributeddata data_app_file:dir { search };
allow distributeddata data_file:dir { search };
allow distributeddata data_misc_ce:dir { add_name create getattr open read remove_name rmdir search setattr write };
allow distributeddata data_misc_ce:file { create getattr ioctl lock map open read rename setattr unlink write };
allow distributeddata data_misc_de:dir { add_name create getattr open read remove_name rmdir search setattr write };
allow distributeddata data_misc_de:file { create getattr ioctl lock map open read rename setattr unlink write };
allow distributeddata data_service_el1_file:dir { add_name getattr open read search write };
allow distributeddata data_service_el1_file:file { create getattr ioctl lock map open read write };
allow distributeddata data_service_file:dir { search };
allow distributeddata deviceauth_service:binder { call };
allow distributeddata dev_ashmem_file:chr_file { open };
allow distributeddata dev_unix_socket:dir { search };
allow distributeddata dev_unix_socket:sock_file { write };
allow distributeddata distributeddata:dir { search };
allow distributeddata distributeddata:lnk_file { read };
allow distributeddata distributedsche:binder { call transfer };
allow distributeddata distributedsched:binder { call transfer };
allow distributeddata dslm_service:binder { call transfer };
allow distributeddata foundation:binder { call transfer };
allow distributeddata hdcd:binder { call transfer };
allow distributeddata hdcd:dir { search };
allow distributeddata hdcd:fd { use };
allow distributeddata hdcd:file { open read };
allow distributeddata hiloginput_socket:sock_file { write };
allow distributeddata huks_service:binder { call };
#avc:  denied  { call } for  pid=531 comm="distributeddata" scontext=u:r:distributeddata:s0 tcontext=u:r:limit_domain:s0 tclass=binder permissive=1
#allow distributeddata limit_domain:binder { call };
allow distributeddata normal_hap:binder { call transfer };
allow distributeddata normal_hap:dir { search };
allow distributeddata normal_hap:file { open read };
#allow distributeddata normal_hap_data_file:dir { search };
allow distributeddata normal_hap_data_file:file { getattr lock };
allow distributeddata proc_file:file { open read };
allow distributeddata samain_exec:file { entrypoint execute read };
allow distributeddata samgr:binder { call transfer };
allow distributeddata softbus_server:binder { call transfer };
allow distributeddata softbus_server:tcp_socket { read setopt write };
allow distributeddata sys_file:dir { search };
allow distributeddata system_etc_file:dir { getattr open read };
allow distributeddata system_profile_file:dir { search };
allow distributeddata tmpfs:lnk_file { read };
allow distributeddata vendor_file:file { execute getattr map open read };
allow distributeddata vendor_lib_file:dir { search };
allowxperm distributeddata data_misc_ce:file ioctl { 0xf50c 0x5413 };
allowxperm distributeddata data_misc_de:file ioctl { 0xf50c 0x5413 };
allowxperm distributeddata data_service_el1_file:file ioctl { 0xf50c };
