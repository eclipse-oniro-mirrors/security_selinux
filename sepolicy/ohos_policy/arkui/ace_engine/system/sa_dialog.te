# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type sa_dialog, domain, nativedomain;

allow sa_dialog appspawn:unix_dgram_socket { write connect };
allow sa_dialog appspawn:fd use;
allow sa_dialog dev_unix_socket:dir { search };
allow sa_dialog samgr:dir { search };
allow sa_dialog sa_subsys_ace_service:samgr_class { get };
allow sa_dialog tracefs:dir { search };
allow sa_dialog data_file:dir { getattr open read  search };
allow sa_dialog sa_dialog:unix_dgram_socket { getopt setopt };
allow sa_dialog sa_inputmethod_service:samgr_class get;
allow sa_dialog system_usr_file:file { getattr read open map };
allow sa_dialog system_usr_file:dir { search mounton };
allow sa_dialog sysfs_devices_system_cpu:file { open read };
allow sa_dialog sa_render_service:samgr_class { get };
allow sa_dialog tracefs_trace_marker_file:file { open write };
allow sa_dialog system_bin_file:dir { search };
allow sa_dialog sa_param_watcher:samgr_class { get };
allow sa_dialog render_service:unix_stream_socket { read write };
allow sa_dialog sa_foundation_wms:samgr_class { get };
allow sa_dialog sa_foundation_dms:samgr_class { get };
allow sa_dialog system_fonts_file:dir { search };
allow sa_dialog system_fonts_file:file { getattr map open read };
allow sa_dialog sa_multimodalinput_service:samgr_class { get };
allow sa_dialog multimodalinput:binder { call };
allow sa_dialog multimodalinput:fd { use };
allow sa_dialog multimodalinput:unix_stream_socket { read write };
allow sa_dialog sa_resource_schedule:samgr_class { get };
allow sa_dialog resource_schedule_service:binder { call };
allow sa_dialog sa_accessibleabilityms:samgr_class { get };
allow sa_dialog dev_kmsg_file:chr_file { open write };
allow sa_dialog accessibility:binder { call transfer };
allow sa_dialog dev_mali:chr_file { getattr ioctl map open read write };
allow sa_dialog disp_gralloc_host:fd { use };
allow sa_dialog sa_foundation_bms:samgr_class { get };
binder_call(sa_dialog, samgr);
binder_call(sa_dialog, ui_service);
binder_call(sa_dialog, render_service);
binder_call(sa_dialog, param_watcher);
binder_call(sa_dialog, foundation);
binder_call(sa_dialog, inputmethod_service);
binder_call(sa_dialog, system_basic_hap);
binder_call(system_basic_hap, sa_dialog);
binder_call(sa_dialog, normal_hap);
binder_call(normal_hap, sa_dialog);


allow inputmethod_service sa_dialog:binder { call transfer };

allowxperm sa_dialog dev_mali:chr_file ioctl { 0x8000 0x8001 0x8002 0x8003 0x8005 0x8006 0x8007 0x800e 0x800f 0x8011 0x8016 0x8018 0x8019 0x801d 0x801e 0x8026 };

#avc:  denied  { read } for  pid=2220 comm="pasting_dialog9" name="u:object_r:hilog_param:s0" dev="tmpfs" ino=47 scontext=u:r:sa_dialog:s0 tcontext=u:object_r:hilog_param:s0 tclass=file permissive=0
allow sa_dialog hilog_param:file { read open map };
