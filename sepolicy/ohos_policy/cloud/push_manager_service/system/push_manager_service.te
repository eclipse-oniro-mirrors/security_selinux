# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type  push_manager_service, sadomain, domain;

allow push_manager_service accessibility_param:file { read open map };
allow push_manager_service accesstoken_service:binder { call };
allow push_manager_service bootevent_param:file { read open map };
allow push_manager_service bootevent_samgr_param:file { read open map };
allow push_manager_service build_version_param:file { read open map };
allow push_manager_service chip_prod_file:dir { search };
allow push_manager_service chip_prod_file:file { read open };
allow push_manager_service const_allow_mock_param:file { map open read };
allow push_manager_service const_allow_param:file { map open read };
allow push_manager_service const_build_param:file { map open read };
allow push_manager_service const_display_brightness_param:file { read open map };
allow push_manager_service const_param:file { read map open };
allow push_manager_service const_postinstall_fstab_param:file { map open read };
allow push_manager_service const_postinstall_param:file { map open read };
allow push_manager_service const_product_param:file { map open read };
allow push_manager_service debug_param:file { map open read };
allow push_manager_service default_param:file { read open map };
allow push_manager_service dev_rtc_file:chr_file { ioctl open read write };
allow push_manager_service dev_unix_socket:dir { search };
allow push_manager_service distributedsche_param:file { read open map };
allow push_manager_service foundation:binder { call transfer };
allow push_manager_service hilog_param:file { map open read };
allow push_manager_service hw_sc_build_os_param:file { map open read };
allow push_manager_service hw_sc_build_param:file { map open read read open };
allow push_manager_service hw_sc_param:file { map open read };
allow push_manager_service init_param:file { map open read };
allow push_manager_service init_svc_param:file { map open read };
allow push_manager_service input_pointer_device_param:file { read open map };
allow push_manager_service push_manager_service:udp_socket { bind connect create read setopt write };
allow push_manager_service musl_param:file { read };
allow push_manager_service net_param:file { map open read };
allow push_manager_service net_tcp_param:file { map open read };
allow push_manager_service node:udp_socket { node_bind };
allow push_manager_service normal_hap_attr:binder { call };
allow push_manager_service ohos_boot_param:file { map open read };
allow push_manager_service ohos_param:file { map open read };
allow push_manager_service param_watcher:binder { call transfer };
allow push_manager_service persist_param:file { map open read };
allow push_manager_service persist_sys_param:file { read map open };
allow push_manager_service proc_file:file { read };
allow push_manager_service rootfs:file { read open };
allow push_manager_service sa_accesstoken_manager_service:samgr_class { get };
allow push_manager_service sa_foundation_abilityms:samgr_class { get };
allow push_manager_service sa_foundation_bms:samgr_class { get };
allow push_manager_service sa_foundation_cesfwk_service:samgr_class { get };
allow push_manager_service sa_push_manager_service:samgr_class { add };
allow push_manager_service sa_net_conn_manager:samgr_class { get };
allow push_manager_service sa_param_watcher:samgr_class { get };
allow push_manager_service security_param:file { open read map };
allow push_manager_service sh:binder { call };
allow push_manager_service startup_param:file { map open read };
allow push_manager_service sys_param:file { map open read };
allow push_manager_service sys_usb_param:file { map open read };
allow push_manager_service system_basic_hap:binder { call };
allow push_manager_service system_bin_file:dir { search };
allow push_manager_service system_core_hap:binder { call };
allow push_manager_service system_file:file { open read };
allow push_manager_service time_service:binder { call };
allow push_manager_service tracefs:dir { search };
allow push_manager_service tracefs_trace_marker_file:file { write open };
allow push_manager_service vendor_bin_file:dir { search };
allow push_manager_service vendor_bin_file:file { open read };
allow push_manager_service vendor_etc_file:dir { search };
allow push_manager_service vendor_etc_file:file { open read };
allowxperm push_manager_service dev_rtc_file:chr_file ioctl {  0x700a  };
