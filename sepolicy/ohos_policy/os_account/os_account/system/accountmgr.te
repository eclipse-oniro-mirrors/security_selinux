# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#type accountmgr, sadomain, domain, samgr_type;

binder_call(accountmgr, useriam);

binder_call(accountmgr, system_core_hap);
allow system_core_hap accountmgr:binder { call };

allow system_basic_hap accountmgr:binder { call };
binder_call(accountmgr, system_basic_hap);

binder_call(accountmgr, normal_hap);
#allow normal_hap accountmgr:binder { call };

allow accountmgr self:unix_dgram_socket{ getopt setopt };

allow accountmgr data_system:dir { getattr write add_name create read open setattr search remove_name rmdir };
allow accountmgr data_system:file { getattr write create read open setattr ioctl relabelfrom };

allow accountmgr data_service_el1_file:dir { getattr write add_name create read open setattr search remove_name rmdir };
allow accountmgr data_service_el1_file:file { getattr write create read open setattr ioctl relabelfrom };

allow accountmgr data_service_file:dir { search };

allow accountmgr account_data_file:file { getattr setattr open ioctl create write read relabelto unlink };
allow accountmgr account_data_file:dir { search };

allow accountmgr vendor_lib_file:file { getattr open read map execute };
allow accountmgr vendor_lib_file:lnk_file { read };
allow accountmgr vendor_lib_file:dir { search };

allow accountmgr data_file:dir { search };

allow accountmgr sys_file:file { read open };

allow accountmgr tracefs:dir { search };
allow accountmgr tracefs_trace_marker_file:file { write open };

allow accountmgr hilog_input_socket:sock_file { write };

allow accountmgr hisysevent_socket:sock_file { write };

allow accountmgr accesstoken_service:binder { call };

allow accountmgr dev_unix_socket:dir { search };

allow accountmgr param_watcher:binder { call };

allow accountmgr storage_manager:binder { call };

allow accountmgr distributeddata:binder { call };

allow accountmgr sa_accountmgr:samgr_class { add };

allow accountmgr sa_param_watcher:samgr_class { get };
allow accountmgr sa_foundation_appms:samgr_class { get };
allow accountmgr sa_storage_manager_service:samgr_class { get };
allow accountmgr sa_foundation_cesfwk_service:samgr_class { get };
allow accountmgr sa_foundation_abilityms:samgr_class { get };
allow accountmgr sa_distributeddata_service:samgr_class { get };
allow accountmgr sa_accesstoken_manager_service:samgr_class { get };
allow accountmgr sa_foundation_bms:samgr_class { get };
allow accountmgr sa_useriam_useridm_service:samgr_class { get };

allow accountmgr data_init_agent:dir { search };
allow accountmgr data_init_agent:file { read append ioctl open };

allow accountmgr param_watcher:binder { transfer };

# add for xts
allow sh sa_accountmgr:samgr_class { get };
allow system_core_hap sa_accountmgr:samgr_class { get };
allow normal_hap sa_accountmgr:samgr_class { get };
allow hiview sa_accountmgr:samgr_class { get };
