# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow pasteboard_service bootevent_param:file { map open read };
allow pasteboard_service bootevent_samgr_param:file { map open read };
allow pasteboard_service build_version_param:file { map open read };
allow pasteboard_service const_allow_mock_param:file { map open read };
allow pasteboard_service const_allow_param:file { map open read };
allow pasteboard_service const_build_param:file { map open read };
allow pasteboard_service const_display_brightness_param:file { map open read };
allow pasteboard_service const_param:file { map open read };
allow pasteboard_service const_postinstall_fstab_param:file { map open read };
allow pasteboard_service const_postinstall_param:file { map open read };
allow pasteboard_service const_product_param:file { map open read };
allow pasteboard_service debug_param:file { map open read };
allow pasteboard_service default_param:file { map open read };
allow pasteboard_service distributedsche_param:file { map open read };
allow pasteboard_service hilog_param:file { map open read };
allow pasteboard_service hw_sc_build_os_param:file { map open read };
allow pasteboard_service hw_sc_build_param:file { map open read };
allow pasteboard_service hw_sc_param:file { map open read };
allow pasteboard_service init_param:file { map open read };
allow pasteboard_service init_svc_param:file { map open read };
allow pasteboard_service input_pointer_device_param:file { map open read };
allow pasteboard_service net_param:file { map open read };
allow pasteboard_service net_tcp_param:file { map open read };
allow pasteboard_service ohos_boot_param:file { map open read };
allow pasteboard_service ohos_param:file { map open read };
allow pasteboard_service param_watcher:binder { call transfer };
allow pasteboard_service persist_param:file { map open read };
allow pasteboard_service persist_sys_param:file { map open read };
allow pasteboard_service sa_param_watcher:samgr_class { get };
allow pasteboard_service sa_pasteboard_service:samgr_class { add };
allow pasteboard_service security_param:file { map open read };
allow pasteboard_service startup_param:file { map open read };
allow pasteboard_service sys_param:file { map open read };
allow pasteboard_service system_bin_file:dir { search };
allow pasteboard_service sys_usb_param:file { map open read };
allow pasteboard_service tracefs:dir { search };
allow pasteboard_service tracefs_trace_marker_file:file { open write };
allow pasteboard_service foundation:binder { call transfer };

#avc:  denied  { get } for service=4607 pid=533 scontext=u:r:pasteboard_service:s0 tcontext=u:object_r:sa_foundation_dms:s0 tclass=samgr_class permissive=1
allow pasteboard_service sa_foundation_dms:samgr_class { get };

#avc:  denied  { get } for service=7001 pid=533 scontext=u:r:pasteboard_service:s0 tcontext=u:object_r:sa_subsys_ace_service:s0 tclass=samgr_class permissive=1
allow pasteboard_service sa_subsys_ace_service:samgr_class { get };

#avc:  denied  { call } for  pid=561 scontext=u:r:pasteboard_service:s0 tcontext=u:r:ui_service:s0 tclass=binder permissive=1
allow pasteboard_service ui_service:binder { call transfer };

#avc:  denied  { call } for  pid=640 scontext=u:r:ui_service:s0 tcontext=u:r:pasteboard_service:s0 tclass=binder permissive=1
allow ui_service pasteboard_service:binder { call transfer };

#avc:  denied  { read } for  pid=594 scontext=u:r:hidumper_service:s0 tcontext=u:r:sa_dialog:s0 tclass=file permissive=0
allow hidumper_service sa_dialog:file { map open read  };

#avc:  denied  { read } for  pid=2250 scontext=u:r:sa_dialog:s0 tcontext=u:object_r:debug_param:s0 tclass=file permissive=0
allow sa_dialog debug_param:file { map open read  };

#avc:  denied  { read } for  pid=2250 scontext=u:r:sa_dialog:s0 tcontext=u:object_r:persist_param:s0 tclass=file permissive=0
allow sa_dialog persist_param:file { map open read  };

#avc:  denied  { read } for  pid=2250 scontext=u:r:sa_dialog:s0 tcontext=u:object_r:default_param:s0 tclass=file permissive=0
allow sa_dialog default_param:file { map open read  };

#avc:  denied  { read } for  pid=2216 scontext=u:r:sa_dialog:s0 tcontext=u:object_r:accessibility_param:s0 tclass=file permissive=0
allow sa_dialog accessibility_param:file { map open read  };

#avc:  denied  { read } for  pid=2147 scontext=u:r:sa_dialog:s0 tcontext=u:object_r:persist_sys_param:s0 tclass=file permissive=0
allow sa_dialog persist_sys_param:file { map open read  };

#avc:  denied  { read } for  pid=2220 comm="pasting_dialog9" name="u:object_r:hilog_param:s0" dev="tmpfs" ino=47 scontext=u:r:sa_dialog:s0 tcontext=u:object_r:hilog_param:s0 tclass=file permissive=0
allow sa_dialog hilog_param:file { read open map };