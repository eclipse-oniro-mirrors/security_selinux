# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow power_host data_file:dir { add_name create search write };
allow power_host data_file:file { create open read read write open write };
allow power_host data_local:dir { search };
allow power_host data_local_tmp:dir { add_name create open read search write };
allow power_host data_local_tmp:file { create ioctl open read write open };
allow power_host dev_hdf_kevent:chr_file { getattr ioctl open read write };
allow power_host dev_unix_socket:dir { search };
allow power_host foundation:binder { call };
allow power_host hdf_devmgr:binder { call transfer };
allow power_host power_host:capability { dac_override dac_read_search };
allow power_host power_host:netlink_kobject_uevent_socket { create setopt };
allow power_host samgr:binder { call };
allow power_host sys_file:dir { open read };
allow power_host sys_file:file { open read };
allow power_host sysfs_devices_system_cpu:file { open read write };
allow power_host sysfs_leds:dir { open read };
allow power_host sysfs_power:file { open read write };
allow power_host sysfs_wake_lck:file { open read write };
allow power_host system_bin_file:dir { search };
allow power_host thermal:binder { call };
allow power_host vendor_etc_file:dir { search };
allow power_host vendor_etc_file:file { getattr open read };
allow power_host vendor_etc_thermal_hdi_config_file:file { getattr open read };
allowxperm power_host data_local_tmp:file ioctl { 0x5413 };
allowxperm power_host dev_hdf_kevent:chr_file ioctl { 0x6201 0x6202 0x6203 };
