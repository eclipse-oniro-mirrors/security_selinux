# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow softbus_server accesstoken_service:binder { call };
allow softbus_server accountmgr:binder { call };
allow softbus_server bluetooth_service:binder { call transfer };
allow softbus_server data_file:dir { search };
allow softbus_server data_service_el1_file:dir { add_name search write };
allow softbus_server data_service_el1_file:file { create read write open };
allow softbus_server data_service_file:dir { search };
allow softbus_server deviceauth_service:binder { call transfer };
allow softbus_server dev_unix_socket:dir { search };
allow softbus_server distributeddata:binder { call };
allow softbus_server distributedfiledaemon:binder { call };
allow softbus_server distributedsche:binder { call };
allow softbus_server dslm_service:binder { call };
allow softbus_server foundation:binder { call };
allow softbus_server huks_service:binder { call };
allow softbus_server param_watcher:binder { call transfer };
allow softbus_server sa_accesstoken_manager_service:samgr_class { get };
allow softbus_server sa_accountmgr:samgr_class { get };
allow softbus_server sa_bluetooth_server:samgr_class { get };
allow softbus_server sa_device_auth_service:samgr_class { get };
allow softbus_server sa_huks_service:samgr_class { get };
allow softbus_server sa_param_watcher:samgr_class { get };
allow softbus_server sa_softbus_service:samgr_class { add get };
allow softbus_server sa_wifi_device_ability:samgr_class { get };
allow softbus_server sa_wifi_hotspot_ability:samgr_class { get };
allow softbus_server sa_wifi_p2p_ability:samgr_class { get };
allow softbus_server sa_wifi_scan_ability:samgr_class { get };
allow softbus_server softbus_server:netlink_route_socket { bind create nlmsg_read read setopt write };
allow softbus_server softbus_server:udp_socket { create ioctl };
allow softbus_server system_bin_file:dir { search };
allow softbus_server system_usr_file:dir { search };
allow softbus_server system_usr_file:file { getattr map open read };
allow softbus_server tracefs:dir { search };
allow softbus_server tracefs_trace_marker_file:file { open write };
allow softbus_server wifi_manager_service:binder { call transfer };
allowxperm softbus_server softbus_server:udp_socket ioctl { 0x8913 0x8927 };
