# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.



#allow domain domain:process {
#    fork
#    sigchld
#    sigkill
#    sigstop
#    signull
#    signal
#    getsched
#    setsched
#    getsession
#    getpgid
#    setpgid
#    getcap
#    setcap
#    getattr
#    setrlimit
#};
#
#allow domain domain:fd use;
#allow domain init:fd use;
#
#allow domain domain:dir read_dir_perms;
#allow domain domain:{ file lnk_file } read_file_perms;
#allow domain domain:{ fifo_file file } rw_file_perms;
#allow domain domain:unix_dgram_socket { create_socket_perms sendto };
#
#allow domain proc_file:dir read_dir_perms;
#allow domain proc_file:lnk_file { getattr read };
#
#allow domain tmpfs:dir { getattr search };
#allow domain tmpfs:chr_file { read write open getattr setattr ioctl map };
#
#allow domain rootfs:dir search;
#allow domain rootfs:lnk_file { read getattr };
#
#allow domain device:dir search;
#
#allow domain dev_type:dir search;
#allow domain dev_type:{ lnk_file chr_file } read_file_perms;
#
#allow domain devpts:dir search;
#
#allow domain socket_device:dir read_dir_perms;
#allow domain {
#    null_device
#    binder_device
#}:chr_file rw_file_perms;
#
#allow domain param_storage:file read_file_perms;
#allow domain param_info:file read_file_perms;
#
#allow domain {
#    system_file
#    system_lib_file
#}:dir read_dir_perms;
#allow domain {
#    system_file
#    system_lib_file
#}:lnk_file { getattr read open };
#
##allow domain system_lib_file:file { execute read open getattr map };
#
#allow domain sys_file:dir search;
#allow domain sys_file:{ lnk_file file } { getattr read };
#
#allow domain system_data_file:dir search;
#
#allow domain selinuxfs:dir search;
#allow domain selinuxfs:file getattr;
#allow domain selinuxfs:filesystem getattr;
#
#allow domain debugfs:dir search;
#
#allow domain fs_type:dir getattr;
#allow domain fs_type:filesystem getattr;
#

allow domain init:process sigchld;
#type samgr, domain;
type multimodalinput, domain;
type accesstoken_service, domain;
type face_service, domain;
type huks_service, domain;
type socperf_service, domain;
type distributedsche, domain;
type pulseaudio, domain;
type storage_manager, domain;
type bluetooth_service, domain;
type accountmgr, domain;
type dslm_service, domain;
type ui_service, domain;
type d_bms, domain;
type wifi_manager_service, domain;
type softbus_server, domain;
type distributeddata, domain;
type usb_service, domain;
type medialibrary_service, domain;
type netdnative, domain;
type netmanager, domain;
type sensors, domain;
type telephony, domain;
type updater_sa, domain;
type time_service, domain;
type bgtaskmgr_service, domain;
type camera_service, domain;
type media_service, domain;
type work_scheduler_service, domain;
type param_watcher, domain;
type useriam, domain;
type inputmethod_service, domain;
type pinauth_service, domain;
#type foundation, domain;
type battery_stats, domain;
type audio_policy, domain;


type watchdog_service, domain;
type watchdog_service_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, watchdog_service_exec, watchdog_service);

type uinput_inject, domain;
type uinput_inject_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, uinput_inject_exec, uinput_inject);

type lmks, domain;
type lmks_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, lmks_exec, lmks);

#type hdf_devmgr, domain;
#type hdf_devmgr_exec, exec_type, file_type, system_file_type;
#domain_auto_transition_pattern(init, hdf_devmgr_exec, hdf_devmgr);

type wifi_hal_service, domain;
type wifi_hal_service_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, wifi_hal_service_exec, wifi_hal_service);

type hilogd, domain;
type hilogd_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, hilogd_exec, hilogd);

type faultloggerd, domain;
type faultloggerd_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, faultloggerd_exec, faultloggerd);

#type hiview, domain;
type hiview_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, hiview_exec, hiview);

type ispserver, domain;
type ispserver_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, ispserver_exec, ispserver);

type storage_daemon, domain;
type storage_daemon_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, storage_daemon_exec, storage_daemon);

type thermal_protector, domain;
type thermal_protector_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, thermal_protector_exec, thermal_protector);

type sh, domain;
type sh_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, sh_exec, sh);

type hdcd, domain;
type hdcd_exec, exec_type, file_type, system_file_type;
domain_auto_transition_pattern(init, hdcd_exec, hdcd);