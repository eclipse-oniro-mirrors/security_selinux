# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


allow domain init:process sigchld;

allow domain self:process { fork sigchld sigkill sigstop signull signal getsched setsched getsession getpgid setpgid getcap setcap getattr setrlimit };

allow domain self:fd use;
allow domain self:file rw_file_perms;
allow domain self:fifo_file rw_file_perms;
allow domain self:dir read_dir_perms;
allow domain self:lnk_file read_file_perms;
allow domain self:unix_dgram_socket { connect create write };
allow domain self:unix_stream_socket { accept bind connect create getattr listen read getopt setopt write connectto ioctl lock append shutdown map };
allow domain self:lockdown confidentiality;

allow domain init:fd use;

allow domain tmpfs:dir { getattr search };
allow domain tmpfs:lnk_file read;

allow domain proc_type:dir read_dir_perms;
allow domain proc_type:lnk_file { getattr read };

allow domain rootfs:dir search;
allow domain rootfs:lnk_file { read getattr };

allow domain dev_file:dir search;
allow domain dev_null_file:chr_file rw_file_perms;
allow domain dev_zero_file:chr_file rw_file_perms;
allow domain dev_ashmem_file:chr_file { getattr read ioctl lock map append write };
allow domain dev_binder_file:chr_file { ioctl map open read write };
allowxperm domain dev_binder_file:chr_file ioctl { 0x6201 0x6205 0x6208 0x6209 0x621e 0x621f };
allow domain dev_at_file:chr_file { ioctl open read write };
allowxperm domain dev_at_file:chr_file ioctl { 0x4101 };

allow domain dev_unix_file:dir search;
allow domain dev_unix_socket_file:dir { search };
allow domain dev_unix_socket_file:sock_file { write };

allow domain dev_random_file:chr_file rw_file_perms;
allow domain dev_parameters_file:dir { getattr search };
allow domain dev_parameters_file:file read_file_perms;

allow domain system_etc_file:dir { open read search getattr };
allow domain system_etc_file:file { getattr map open read };

allow domain system_file:dir { search };

allow domain system_lib_file:dir { search };
allow domain system_lib_file:file { execute getattr map open read };
allow domain system_lib_file:lnk_file { read };

allow domain system_profile_file:file read_file_perms;
allow domain system_profile_file:dir search;

allow domain sysfs_type:lnk_file { getattr read };
allow domain sysfs_type:dir search;

allow domain selinuxfs:file getattr;

allow domain debugfs:dir search;

allow domain fs_type:filesystem getattr;
allow domain { fs_type -unlabeled }:dir getattr;

allow { domain -hap_domain } vendor_file:dir search;

allow domain etc_file:lnk_file { read };

allow { domain -hap_domain } kernel:fd use;

allow domain init:unix_dgram_socket { sendto };
allow { domain -hap_domain } init:unix_stream_socket { read write };
allow { domain -hap_domain } init:netlink_kobject_uevent_socket { read write };

# neverallow rules
neverallow init file_type:file execute_no_trans;
neverallow { domain -init } dev_parameters_file:file write;

# only execute file with exec_type & system_bin_file & vendor_bin_file ToDo delete vendor_file
neverallow * { file_type -system_bin_file -system_lib_file -vendor_bin_file -vendor_lib_file -vendor_file -exec_type -hap_data_file }:file { execute execute_no_trans entrypoint };

# keep every process join the domain attribute.
neverallow ~domain domain:process { transition dyntransition };

# everyone should in { sadomain hdfdomain hap_domain nativedomain }
neverallow domain { domain -init -sadomain -hdfdomain -hap_domain -nativedomain }:process { transition dyntransition };

# keep every file join file_type
neverallow * ~{ file_type domain fs_type dev_type } :{ dir notdevfile_class_set } *;

neverallow domain ~{ domain fs_type dev_type system_file_type vendor_file_type proc_type sysfs_type data_file_type }:{ file dir } *;
# keep every dev_node join dev_type
neverallow * ~{ dev_type fs_type } :devfile_class_set *;

# keep every paramter join parameter_type
neverallow * ~parameter_type:parameter_service *;

# keep every service join service_type
neverallow * ~samgr_type:samgr_class *;

# keep every hdf service join hdf_devmgr_type
neverallow * ~hdf_devmgr_type:hdf_devmgr_class *;

neverallow domain default_param:parameter_service *;
neverallow domain default_service:samgr_class *;
neverallow domain default_hdf_service:hdf_devmgr_class *;

# every file should have a label. The unlabeled file shouldn't be accessed.
neverallow { domain -init -kernel } unlabeled:dir_file_class_set *;

# keep selinuxfs safe.
neverallow * kernel:security { load_policy setenforce setbool };
neverallow { domain -kernel } kernel:security setcheckreqprot;
neverallow { domain -init } kernel:security setsecparam;

# can't use domain type as exec target.
neverallow * domain:file { execute execute_no_trans entrypoint };

# never use set stack and heap executable.
neverallow * self:process { execstack execheap };

# dev node file label should be configured in file_contexts.
#neverallow domain dev_file:{ file chr_file blk_file } *;

neverallow { domain -kernel -init } dev_type:blk_file { open read write };
# only init can operate fs
neverallow { domain -init -storage_daemon -hdcd } *:filesystem ~{ getattr };

# can't execute data file unless hap.
neverallow { domain -hap_domain } data_file_type:file { execute execute_no_trans };

# service can't modify hap sandbox
neverallow { domain -hap_domain -installs } hap_data_file:dir_file_class_set { create unlink };

neverallow { domain -hap_domain } hap_data_file:file open;

neverallow domain rootfs:file { create write setattr relabelto append unlink link rename };

neverallow { domain -init } { proc_type sysfs_type }:dir { add_name create link rename remove_name reparent rmdir write };
# limit capability use.
# for exemption add rule like this:
# neverallow { domain -init } self:capability chown;
# means that only init can have the caps of chown.
# TODO:debug/release
neverallow { domain -appspawn -init -kernel -ueventd -storage_daemon } self:capability chown;
neverallow { domain -appspawn -init -kernel -udevd -storage_daemon } self:capability dac_override;
neverallow { domain -appspawn -init -kernel } self:capability dac_read_search;
neverallow { domain -init -udevd -ueventd -faultloggerd } self:capability fowner;
neverallow { domain -appspawn -init -udevd -ueventd } self:capability fsetid;
neverallow { domain -faultloggerd } self:capability kill;
neverallow { domain -init } self:capability setuid;
neverallow { domain -init -ueventd } self:capability setgid;
neverallow domain self:capability setpcap;
neverallow domain self:capability linux_immutable;
neverallow domain self:capability net_bind_service;
neverallow domain self:capability net_broadcast;
neverallow { domain -init -wifi_hal_service -wifi_manager_service -softbus_server -power_host
            -storage_daemon -udevd } self:capability net_admin;
neverallow { domain -wifi_hal_service } self:capability net_raw;
neverallow domain self:capability ipc_lock;
neverallow domain self:capability ipc_owner;
neverallow { domain -wifi_hal_service } self:capability sys_module;
neverallow { domain -init } self:capability sys_rawio;
neverallow domain self:capability sys_chroot;
neverallow { domain -hdcd -hiview } self:capability sys_ptrace;
neverallow domain self:capability sys_pacct;
neverallow { domain -init -render_service -storage_daemon -display_gralloc_host -hdcd } self:capability sys_admin;
neverallow { domain -init } self:capability sys_boot;
neverallow { domain -render_service } self:capability sys_nice;
neverallow { domain -init -memmgrservice } self:capability sys_resource;
neverallow domain self:capability sys_time;
neverallow domain self:capability sys_tty_config;
neverallow { domain -kernel -ueventd } self:capability mknod;
neverallow domain self:capability lease;
neverallow domain self:capability audit_write;
neverallow domain self:capability audit_control;
neverallow domain self:capability setfcap;
neverallow domain self:capability2 mac_override;
neverallow domain self:capability2 mac_admin;
neverallow domain self:capability2 syslog;
neverallow { domain -time_service } self:capability2 wake_alarm;
neverallow { domain -power_host } self:capability2 block_suspend;
neverallow domain self:capability2 audit_read;
neverallow { domain -hdcd } self:capability2 checkpoint_restore;
